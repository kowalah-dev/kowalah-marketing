---
interface Step {
  step_number: number;
  title: string;
  description: string;
  duration: string;
}

interface Props {
  title: string;
  subtitle?: string;
  durationLabel?: string;
  steps: Step[];
}

const { title, subtitle, durationLabel, steps }: Props = Astro.props;
---

<section class="section bg-body/60">
  <div class="container">
    <div class="row justify-center text-center">
      <div class="col-12 lg:col-8">
        <h2 class="h2 mb-4" data-aos="fade-up-sm">{title}</h2>
        {subtitle && (
          <p class="text-lg text-text-dark/75" data-aos="fade-up-sm" data-aos-delay="100">
            {subtitle}
          </p>
        )}
        {durationLabel && (
          <p class="mt-2 text-sm font-semibold uppercase tracking-[0.35em] text-secondary/70" data-aos="fade-up-sm" data-aos-delay="140">
            {durationLabel}
          </p>
        )}
      </div>
    </div>

    <div class="mt-12 space-y-6">
      {steps.map((step, index) => (
        <div
          class="rounded-3xl border border-border/30 bg-white/[0.03] p-6 md:p-8"
          data-aos="fade-up-sm"
          data-aos-delay={160 + index * 60}
        >
          <div class="flex flex-col gap-4 md:flex-row md:items-center md:justify-between">
            <div>
              <p class="text-xs font-semibold uppercase tracking-[0.35em] text-secondary/70">
                Step {step.step_number}
              </p>
              <h3 class="text-xl font-semibold text-text-dark mt-2">{step.title}</h3>
            </div>
            <p class="text-sm text-text-dark/70 md:text-right">{step.duration}</p>
          </div>
          <p class="mt-4 text-sm text-text-dark/80">{step.description}</p>
        </div>
      ))}
    </div>
  </div>
</section>
