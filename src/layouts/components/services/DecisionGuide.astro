---
interface DecisionItem {
  service: string;
  bestFor: string;
  trigger: string;
  nextStep: string;
}

interface Props {
  title: string;
  subtitle?: string;
  items: DecisionItem[];
}

const { title, subtitle, items }: Props = Astro.props;
---

<section class="section">
  <div class="container">
    <div class="row justify-center text-center">
      <div class="lg:col-8">
        <h2 class="mb-4 h2" data-aos="fade-up-sm">{title}</h2>
        {subtitle && (
          <p
            class="mb-10 text-lg text-text-dark opacity-80"
            data-aos="fade-up-sm"
            data-aos-delay="100"
          >
            {subtitle}
          </p>
        )}
      </div>
    </div>

    <div class="row g-6 justify-center">
      {items.map((item, index) => (
        <div
          class="col-12 lg:col-6 mb-6 md:mb-10"
          data-aos="fade-up-sm"
          data-aos-delay={150 + index * 60}
        >
          <div class="h-full rounded-3xl border border-border/30 bg-white/[0.03] p-7">
            <h3 class="mb-4 text-2xl font-semibold text-text-dark">{item.service}</h3>
            <dl class="space-y-4 text-sm text-text-dark opacity-80">
              <div>
                <dt class="text-xs font-semibold uppercase tracking-[0.35em] text-secondary/70">
                  Best For
                </dt>
                <dd class="mt-1 leading-relaxed">{item.bestFor}</dd>
              </div>
              <div>
                <dt class="text-xs font-semibold uppercase tracking-[0.35em] text-secondary/70">
                  Trigger
                </dt>
                <dd class="mt-1 leading-relaxed">{item.trigger}</dd>
              </div>
              <div>
                <dt class="text-xs font-semibold uppercase tracking-[0.35em] text-secondary/70">
                  Next Step
                </dt>
                <dd class="mt-1 leading-relaxed">{item.nextStep}</dd>
              </div>
            </dl>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>
