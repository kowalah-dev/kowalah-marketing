---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import Button from "@/shortcodes/Button";
import AcceleratorCarousel from "@/components/AcceleratorCarousel.astro";
import { Icon } from "astro-icon/components";
import { getEntry, type CollectionEntry } from "astro:content";

// Get call to action section
const call_to_action = (await getEntry(
  "sections",
  "call-to-action"
)) as CollectionEntry<"sections">;

// Import content from markdown file
import { getMarkdownData } from "@/lib/utils/markdown";
const pageData = getMarkdownData("services/accelerators.md");
---

<Base title={pageData.title} meta_title={pageData.meta_title} description={pageData.description}>
  <!-- Hero Section -->
  <section class="section-sm pt-24 relative overflow-hidden z-0">
    {/* Background image with gradient overlay */}
    <div class="absolute inset-0 -z-10">
      <ImageMod
        src="/images/services/accelerators-cta-bg.png"
        alt="ChatGPT Accelerators"
        width={1920}
        height={800}
        class="w-full h-full object-cover"
      />
      <div class="absolute inset-0 bg-gradient-to-br from-primary/60 via-primary/55 to-secondary/60"></div>
    </div>

    <div class="container relative">
      <div class="row justify-center">
        <div class="xl:col-10 lg:col-12">
          <div class="text-center">
            <h1 class="h1 text-white drop-shadow-lg" data-aos="fade-up-sm">
              {pageData.hero.title}
            </h1>
            <p class="mt-6 text-xl text-white/95 drop-shadow-md" data-aos="fade-up-sm" data-aos-delay="50">
              {pageData.hero.subtitle}
            </p>
            <div class="mt-8" data-aos="fade-up-sm" data-aos-delay="100">
              <Button
                label={pageData.hero.cta_primary.label}
                link={pageData.hero.cta_primary.link}
                style="light"
                className="me-4 mb-4"
              />
              {pageData.hero.cta_primary.subtext && (
                <p class="mt-2 text-sm text-white/90 drop-shadow-sm">{pageData.hero.cta_primary.subtext}</p>
              )}
            </div>
          </div>
        </div>
      </div>

      {pageData.hero.product_screenshot && (
        <div class="row justify-center mt-16">
          <div class="lg:col-10">
            <div data-aos="fade-up-sm" data-aos-delay="150">
              <ImageMod
                src={pageData.hero.product_screenshot}
                alt={pageData.title}
                width={2400}
                height={1600}
                class="w-full rounded-3xl shadow-2xl"
                loading="lazy"
                decoding="async"
                style="image-rendering: -webkit-optimize-contrast; image-rendering: crisp-edges;"
              />
            </div>
          </div>
        </div>
      )}
    </div>
  </section>

  <!-- Problem/Solution Section -->
  {pageData.problem_solution && (
    <section class="section">
      <div class="container">
        <div class="row items-center g-6">
          <div class="lg:col-6 mb-6 lg:mb-0" data-aos="fade-right">
            <div class="rounded-3xl overflow-hidden shadow-2xl shadow-primary/20">
              <ImageMod
                src={pageData.problem_solution.image}
                alt={pageData.problem_solution.title}
                width={800}
                height={600}
                class="w-full h-full object-cover"
              />
            </div>
          </div>
          <div class="lg:col-6" data-aos="fade-left">
            <h2 class="h2 mb-6">{pageData.problem_solution.title}</h2>

            <div class="mb-6 p-6 rounded-2xl bg-white/[0.05] border border-border/30">
              <p class="text-lg text-text-dark leading-relaxed">
                {pageData.problem_solution.problem_statement}
              </p>
            </div>

            <div class="mb-8 p-6 rounded-2xl bg-gradient-to-br from-primary/10 to-secondary/10 border border-primary/20">
              <p class="text-lg font-medium text-text-dark leading-relaxed">
                {pageData.problem_solution.solution_overview}
              </p>
            </div>

            {pageData.problem_solution.trust_elements && (
              <ul class="space-y-3">
                {pageData.problem_solution.trust_elements.slice(0, 4).map((element: string) => (
                  <li class="flex items-start gap-3">
                    <Icon name="check" size={20} class="text-primary flex-shrink-0 mt-1" />
                    <span class="text-text-dark">{element}</span>
                  </li>
                ))}
              </ul>
            )}
          </div>
        </div>
      </div>
    </section>
  )}

  <!-- Featured Accelerators Carousel -->
  <AcceleratorCarousel
    title={pageData.featured_showcase.title}
    subtitle={pageData.featured_showcase.subtitle}
    accelerators={pageData.featured_showcase.items}
  />

  <!-- Capabilities Section -->
  {pageData.capabilities && (
    <section class="section bg-light">
      <div class="container">
        <div class="row justify-center">
          <div class="lg:col-8 text-center mb-16">
            <h2 class="h2" data-aos="fade-up-sm">{pageData.capabilities.title}</h2>
          </div>
        </div>

        <div class="row g-4">
          {pageData.capabilities.items.map((capability: any, index: number) => (
            <div class="lg:col-6 mb-8" data-aos="fade-up-sm" data-aos-delay={index * 100}>
              <div class="h-full bg-white rounded-2xl p-8 shadow-sm hover:shadow-lg transition-shadow">
                <div class="flex items-start gap-4 mb-6">
                  <Icon name={capability.icon} size={32} class="text-primary flex-shrink-0 mt-1" />
                  <div>
                    <h3 class="h5 mb-3">{capability.title}</h3>
                    <p class="text-text-dark mb-4">{capability.description}</p>
                  </div>
                </div>

                <ul class="mb-6 space-y-3">
                  {capability.details.map((detail: string) => (
                    <li class="flex items-start gap-3">
                      <div class="w-2 h-2 bg-primary rounded-full flex-shrink-0 mt-2"></div>
                      <span class="text-sm text-text-dark">{detail}</span>
                    </li>
                  ))}
                </ul>

                <p class="text-sm font-medium text-primary">{capability.value_proposition}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- How It Works Section -->
  {pageData.how_it_works && (
    <section class="section">
      <div class="container">
        <div class="row justify-center">
          <div class="lg:col-8 text-center mb-16">
            <h2 class="h2 mb-4" data-aos="fade-up-sm">{pageData.how_it_works.title}</h2>
            <p class="text-lg text-text-dark" data-aos="fade-up-sm" data-aos-delay="50">
              {pageData.how_it_works.subtitle}
            </p>
          </div>
        </div>

        <div class="row g-4 mb-16">
          {pageData.how_it_works.steps.map((step: any, index: number) => (
            <div class="lg:col-4 text-center" data-aos="fade-up-sm" data-aos-delay={index * 100}>
              <div class="mb-6">
                <div class="w-16 h-16 bg-primary text-white rounded-full flex items-center justify-center text-xl font-bold mx-auto mb-6">
                  {step.step_number}
                </div>
              </div>
              <h3 class="h5 mb-4">{step.title}</h3>
              <p class="text-text-dark mb-6">{step.description}</p>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Use Cases Section -->
  {pageData.use_cases && (
    <section class="section bg-light">
      <div class="container">
        <div class="row justify-center">
          <div class="lg:col-8 text-center mb-12">
            <h2 class="h2" data-aos="fade-up-sm">{pageData.use_cases.title}</h2>
          </div>
        </div>

        <div class="row g-4">
          {pageData.use_cases.items.map((useCase: any, index: number) => (
            <div class="lg:col-12 mb-8" data-aos="fade-up-sm" data-aos-delay={index * 100}>
              <div class="bg-white rounded-2xl p-8 shadow-sm">
                <div class="row">
                  <div class="lg:col-4">
                    <h3 class="h6 mb-4 text-primary">Scenario</h3>
                    <p class="text-text-dark font-medium">"{useCase.scenario}"</p>
                  </div>
                  <div class="lg:col-4">
                    <h3 class="h6 mb-4 text-primary">Solution</h3>
                    <p class="text-text-dark">{useCase.solution}</p>
                  </div>
                  <div class="lg:col-4">
                    <h3 class="h6 mb-4 text-primary">Outcome</h3>
                    <p class="text-text-dark">{useCase.outcome}</p>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Service Integration Section -->
  {pageData.service_integration && (
    <section class="section bg-light">
      <div class="container">
        <div class="row justify-center">
          <div class="lg:col-8 text-center mb-12">
            <h2 class="h2 mb-4" data-aos="fade-up-sm">{pageData.service_integration.title}</h2>
            <p class="text-lg text-text-dark" data-aos="fade-up-sm" data-aos-delay="50">
              {pageData.service_integration.subtitle}
            </p>
          </div>
        </div>

        <div class="row g-4">
          {pageData.service_integration.services.map((service, index) => (
            <div class="lg:col-4 mb-6" data-aos="fade-up-sm" data-aos-delay={index * 100}>
              <div class="bg-white rounded-xl p-6 h-full">
                <div class="flex items-center gap-4 mb-4">
                  <Icon name={service.icon} size={24} class="text-primary flex-shrink-0" />
                  <h3 class="h6 mb-0">{service.title}</h3>
                </div>
                <p class="text-text-dark mb-4">{service.description}</p>
                <div class="mb-4">
                  <h4 class="text-sm font-semibold text-primary mb-2">Key Accelerators:</h4>
                  <ul class="space-y-1">
                    {service.accelerator_examples.map((example) => (
                      <li class="text-sm text-text-dark flex items-start gap-2">
                        <div class="w-1 h-1 bg-primary rounded-full flex-shrink-0 mt-2"></div>
                        {example}
                      </li>
                    ))}
                  </ul>
                </div>
                <a href={service.link} class="text-primary text-sm font-medium hover:underline">
                  View {service.title} →
                </a>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Conversion Section -->
  <section class="section pb-0">
    <div class="container">
      <div
        class="rounded-3xl relative overflow-hidden px-5 pt-7 md:px-12 md:pt-16 pb-16 min-h-[400px] flex items-center"
        data-aos="fade-up-sm"
      >
        {/* Background image with gradient overlay */}
        <div class="absolute inset-0 -z-10">
          <ImageMod
            src={pageData.conversion.background_image}
            alt="ChatGPT Accelerators"
            width={1200}
            height={400}
            class="w-full h-full object-cover"
          />
          <div class="absolute inset-0 bg-gradient-to-br from-primary/60 via-primary/55 to-secondary/60"></div>
        </div>

        <div class="row justify-center relative z-10 w-full">
          <div class="lg:col-8 text-center">
            <h2 class="h2 text-white mb-6 drop-shadow-lg" data-aos="fade-up-sm">
              {pageData.conversion.title}
            </h2>
            <p class="text-xl text-white/95 mb-6 drop-shadow-md" data-aos="fade-up-sm" data-aos-delay="50">
              {pageData.conversion.subtitle}
            </p>
            <p class="text-white/90 mb-8 drop-shadow-md" data-aos="fade-up-sm" data-aos-delay="100">
              {pageData.conversion.offer_description}
            </p>

            <div data-aos="fade-up-sm" data-aos-delay="150">
              <Button
                label={pageData.conversion.cta.label}
                link={pageData.conversion.cta.link}
                style="light"
                className="mb-4"
              />
            </div>

            <p class="text-sm text-white/90 drop-shadow-sm">{pageData.conversion.cta.subtext}</p>
          </div>
        </div>
      </div>
    </div>
  </section>
</Base>