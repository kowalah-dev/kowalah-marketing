---
import Base from "@/layouts/Base.astro";
import { client, queries } from "@/lib/sanity";

let sanityStatus = "Unknown";
let connectionError = null;
let availableContent = [];
let allTypes = [];
let faqData = [];
let legalData = [];

try {
  // First, let's see what content types are available
  allTypes = await client.fetch(`array::unique(*[]._type)`);
  
  // Try different possible FAQ type names
  const possibleFaqTypes = ['faq', 'faqs', 'FAQ', 'FAQs', 'faqItem', 'faqManagement'];
  
  for (const typeName of possibleFaqTypes) {
    try {
      const result = await client.fetch(`*[_type == "${typeName}"][0...10]`);
      if (result && result.length > 0) {
        faqData = result;
        break;
      }
    } catch (e) {
      // Continue checking other type names
    }
  }
  
  // If no specific FAQ type found, get all content to see what's available
  if (faqData.length === 0) {
    availableContent = await client.fetch(`*[][0...20] {
      _type,
      _id,
      ...
    }`);
  } else {
    availableContent = faqData;
  }
  
  sanityStatus = "Connected";
} catch (error) {
  sanityStatus = "Error";
  connectionError = error.message;
}

// Test environment variables
const projectId = import.meta.env.PUBLIC_SANITY_PROJECT_ID;
const dataset = import.meta.env.PUBLIC_SANITY_DATASET;
const hasApiToken = !!import.meta.env.SANITY_API_TOKEN;
---

<Base title="Sanity Integration Test">
  <section class="section-sm">
    <div class="container">
      <div class="row">
        <div class="col-lg-8 mx-auto">
          <h1 class="text-center">Sanity Integration Test</h1>
          
          <div class="mt-8 space-y-6">
            <!-- Environment Configuration -->
            <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow">
              <h2 class="text-xl font-semibold mb-4">Environment Configuration</h2>
              <div class="space-y-2 text-sm">
                <p><strong>Project ID:</strong> <code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">{projectId}</code></p>
                <p><strong>Dataset:</strong> <code class="bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">{dataset}</code></p>
                <p><strong>API Token Present:</strong> <span class={`px-2 py-1 rounded text-white ${hasApiToken ? 'bg-green-500' : 'bg-red-500'}`}>
                  {hasApiToken ? 'Yes' : 'No'}
                </span></p>
              </div>
            </div>

            <!-- Connection Status -->
            <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow">
              <h2 class="text-xl font-semibold mb-4">Connection Status</h2>
              <div class="flex items-center space-x-3">
                <span class={`px-3 py-1 rounded-full text-white text-sm ${
                  sanityStatus === 'Connected' ? 'bg-green-500' : 
                  sanityStatus === 'Error' ? 'bg-red-500' : 'bg-yellow-500'
                }`}>
                  {sanityStatus}
                </span>
                {connectionError && (
                  <p class="text-red-600 text-sm">Error: {connectionError}</p>
                )}
              </div>
            </div>

            <!-- Available Content Types -->
            <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow">
              <h2 class="text-xl font-semibold mb-4">Available Content Types in Sanity</h2>
              {allTypes.length > 0 ? (
                <div class="space-y-2">
                  <p class="text-green-600 font-medium">Found {allTypes.length} content types:</p>
                  <div class="flex flex-wrap gap-2">
                    {allTypes.map((type) => (
                      <span class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded">
                        {type}
                      </span>
                    ))}
                  </div>
                </div>
              ) : (
                <p class="text-gray-600 dark:text-gray-400">No content types found</p>
              )}
            </div>

            <!-- Available Content -->
            <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow">
              <h2 class="text-xl font-semibold mb-4">Content Sample</h2>
              {availableContent.length > 0 ? (
                <div class="space-y-3">
                  <p class="text-green-600 font-medium">
                    {faqData.length > 0 ? `Found ${faqData.length} FAQ items!` : `Showing ${availableContent.length} items from various types`}
                  </p>
                  {availableContent.slice(0, 5).map((item) => (
                    <div class="border border-gray-200 dark:border-gray-600 p-3 rounded">
                      <p><strong>Type:</strong> <span class="text-blue-600">{item._type}</span></p>
                      <p><strong>ID:</strong> <code class="text-xs bg-gray-100 dark:bg-gray-700 px-1 rounded">{item._id}</code></p>
                      {Object.entries(item).filter(([key]) => !key.startsWith('_')).slice(0, 5).map(([key, value]) => (
                        <p><strong>{key}:</strong> {typeof value === 'object' ? JSON.stringify(value, null, 2).substring(0, 100) + '...' : String(value).substring(0, 100)}</p>
                      ))}
                    </div>
                  ))}
                </div>
              ) : (
                <p class="text-gray-600 dark:text-gray-400">No content found or connection failed</p>
              )}
            </div>

            <!-- Test Queries -->
            <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow">
              <h2 class="text-xl font-semibold mb-4">Available Query Functions</h2>
              <div class="space-y-2">
                <p><strong>Homepage Query:</strong> <code class="text-xs">queries.homepage</code></p>
                <p><strong>Blog Posts Query:</strong> <code class="text-xs">queries.blogPosts</code></p>
                <p><strong>Page Content Query:</strong> <code class="text-xs">queries.pageContent(slug)</code></p>
                <p><strong>Single Blog Post:</strong> <code class="text-xs">queries.blogPost(slug)</code></p>
              </div>
            </div>

            <!-- Development Notes -->
            <div class="bg-blue-50 dark:bg-blue-900/20 p-6 rounded-lg">
              <h3 class="font-semibold text-blue-800 dark:text-blue-200 mb-2">Development Notes</h3>
              <div class="text-sm text-blue-700 dark:text-blue-300 space-y-1">
                <p>• This test page verifies the Sanity CMS connection is working</p>
                <p>• All environment variables are properly configured</p>
                <p>• Sanity client can fetch content from the production dataset</p>
                <p>• Remove this page before deploying to production</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Base>