---
import ImageMod from "@/components/ImageMod.astro";
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import PageHeader from "@/partials/PageHeader.astro";
import Testimonial from "@/partials/Testimonial.astro";
import Button from "@/shortcodes/Button";
import { Icon } from "astro-icon/components";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const featureIndex = (await getEntry(
  "features",
  "-index"
)) as CollectionEntry<"features">;
const { title, meta_title, description, hero, features, conversion } =
  featureIndex.data;
const testimonial = (await getEntry(
  "sections",
  "testimonial"
)) as CollectionEntry<"sections">;
const call_to_action = (await getEntry(
  "sections",
  "call-to-action"
)) as CollectionEntry<"sections">;
---

<Base title={title} meta_title={meta_title} description={description}>
  <PageHeader title={hero.title} content={hero.content} />

  <section>
    <div class="container">
      <div class="row">
        {
          features.map((feature: any, index: number) => (
            <div class="col-12 mb-[5.5rem] last:mb-0">
              <div class="feature-card">
                <div
                  class={`feature-card-content max-lg:order-2 ${index % 2 === 0 ? "lg:order-1" : "lg:order-2"}`}
                >
                  <p
                    set:html={markdownify(feature.subtitle)}
                    class="mb-4 text-sm"
                    data-aos="fade-up-sm"
                  />
                  <h2
                    set:html={markdownify(feature.title)}
                    class="mb-8 lg:h1"
                    data-aos="fade-up-sm"
                  />
                  <ul class="mb-10">
                    {feature.points.map((item: any) => (
                      <li
                        class="flex items-center gap-4 mb-4 last:mb-0 text-text-dark"
                        data-aos="fade-up-sm"
                        data-aos-delay={300 + index * 50}
                      >
                        <Icon name={item.icon} size={24} />
                        <span set:html={markdownify(item.detail)} />
                      </li>
                    ))}
                  </ul>
                  <div data-aos="fade-up-sm" data-aos-delay="700">
                    <Button
                      label={feature.button.label}
                      link={feature.button.link}
                      icon="FaAngleRight"
                      className="w-fit"
                    />
                  </div>
                </div>
                <div
                  class={`feature-card-image max-lg:order-1 ${index % 2 !== 0 ? "lg:order-1" : "lg:order-2"}`}
                >
                  <div
                    class="bg-light rounded-3xl p-6 lg:p-[4rem] flex flex-col"
                    data-aos="fade-up-sm"
                    data-aos-delay="150"
                  >
                    {typeof feature.image === "string" ? (
                      <div data-aos="fade-up-sm" data-aos-delay="300">
                        <ImageMod
                          src={feature.image}
                          alt={feature.title}
                          width={337}
                          height={339}
                          class="border-b-4 border-text/10 rounded-3xl bg-light mx-auto"
                        />
                      </div>
                    ) : (
                      <>
                        <div data-aos="fade-up-sm" data-aos-delay="300">
                          <ImageMod
                            src={feature.image[0]}
                            alt={feature.title}
                            width={407}
                            height={109}
                            class="border border-text/10 rounded-3xl relative z-10 translate-y-1.5 bg-light mx-auto"
                          />
                        </div>
                        <div data-aos="fade-up-sm" data-aos-delay="350">
                          <ImageMod
                            src={feature.image[1]}
                            alt={feature.title}
                            width={399}
                            height={227}
                            class="border-b-4 border-text/10 rounded-3xl -translate-y-1.5 mx-auto"
                          />
                        </div>
                      </>
                    )}
                  </div>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <Testimonial testimonial={testimonial} />

  <section class="section bg-light">
    <div class="container">
      <div class="mb-14">
        <p
          set:html={markdownify(conversion.subtitle)}
          class="mb-2 text-sm text-center"
          data-aos="fade-up-sm"
        />
        {
          conversion.title && (
            <h2
              set:html={markdownify(conversion.title)}
              class="text-center lg:h1"
              data-aos="fade-up-sm"
            />
          )
        }
      </div>

      <div class="row g-4 justify-center">
        {
          conversion.card.map((c: any, index: number) => (
            <div
              class="lg:col-4 md:col-6 col-12 min-h-full"
              data-aos="fade-up-sm"
              data-aos-delay={200 + index * 100}
            >
              <div class="group relative overflow-hidden px-7 py-6 h-[30rem] rounded-2xl">
                <ImageMod
                  src={c.image}
                  alt={c.title}
                  width={364}
                  height={462}
                  class="absolute group-hover:scale-110 transition duration-500 object-cover left-0 top-0 w-full h-full"
                />
                <div class="bg-gradient-to-br from-black to-transparent opacity-50 h-full w-full absolute left-0 top-0" />

                <div class="flex flex-col justify-between h-full relative z-10">
                  <p class="text-[1.75rem] font-medium text-light max-md:[&>br]:hidden">
                    {c.title}
                  </p>
                  <Button
                    label={c.button.label}
                    link={c.button.link}
                    style="secondary"
                    className="w-fit"
                  />
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>

  <CallToAction call_to_action={call_to_action} />
</Base>
